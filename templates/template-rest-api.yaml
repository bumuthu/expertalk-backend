AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Resources:
  # REST API
  RESTApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub '${ApiGatewayName}-rest'

  # Authorizer
  RESTAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      RestApiId: !Ref RESTApi
      Type: COGNITO_USER_POOLS
      ProviderARNs:
        - !Ref CognitoUserPoolArn
      IdentitySource: method.request.header.Authorization
      Name: !Sub "talk-${EnvironmentName}-api-auth"

  # Deployment
  RESTApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - PublicUserCreate
      - UserRetrievalByToken
      # TODO add others
    Properties:
      RestApiId: !Ref RESTApi
      StageName: !Ref StageName

  # Path Resources
  # /v1
  VersionResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RESTApi.RootResourceId
      RestApiId: !Ref RESTApi
      PathPart: v1

  # /v1/public
  PublicResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref VersionResource
      RestApiId: !Ref RESTApi
      PathPart: public

  # /v1/user
  UserResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref VersionResource
      RestApiId: !Ref RESTApi
      PathPart: user

  # /v1/public/user
  PublicUserResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref PublicResource
      RestApiId: !Ref RESTApi
      PathPart: user

  # /v1/workspace
  WorkspaceResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref VersionResource
      RestApiId: !Ref RESTApi
      PathPart: workspace

  # Path Resources: System configs
  SysConfigResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref VersionResource
      RestApiId: !Ref RESTApi
      PathPart: sys-configs
  SysConfigNameResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref SysConfigResource
      RestApiId: !Ref RESTApi
      PathPart: "{name}"

  # Methods
  PublicUserCreate:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - PublicUserResource
    Properties:
      RestApiId: !Ref RESTApi
      ResourceId: !Ref PublicUserResource
      HttpMethod: POST
      AuthorizationType: NONE
      MethodResponses:
        - StatusCode: "200"
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PublicHandlerArn}/invocations 

  UserRetrievalByToken:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - UserResource
    Properties:
      RestApiId: !Ref RESTApi
      ResourceId: !Ref UserResource
      HttpMethod: GET
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref RESTAuthorizer
      MethodResponses:
        - StatusCode: "200"
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UserWorkspaceHandlerArn}/invocations 

  UserUpdateByToken:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - UserResource
    Properties:
      RestApiId: !Ref RESTApi
      ResourceId: !Ref UserResource
      HttpMethod: PUT
      AuthorizationType: NONE
      MethodResponses:
        - StatusCode: "200"
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UserWorkspaceHandlerArn}/invocations 

  WorkspaceCreate:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - WorkspaceResource
    Properties:
      RestApiId: !Ref RESTApi
      ResourceId: !Ref WorkspaceResource
      HttpMethod: POST
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref RESTAuthorizer
      MethodResponses:
        - StatusCode: "200"
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UserWorkspaceHandlerArn}/invocations 

  WorkspaceUpdate:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - WorkspaceResource
    Properties:
      RestApiId: !Ref RESTApi
      ResourceId: !Ref WorkspaceResource
      HttpMethod: PUT
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref RESTAuthorizer
      MethodResponses:
        - StatusCode: "200"
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UserWorkspaceHandlerArn}/invocations 

  WorkspacesGetByUserId:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - WorkspaceResource
    Properties:
      RestApiId: !Ref RESTApi
      ResourceId: !Ref WorkspaceResource
      HttpMethod: GET
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref RESTAuthorizer
      MethodResponses:
        - StatusCode: "200"
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UserWorkspaceHandlerArn}/invocations 


  # Methods: Pricing Plan
  SysConfigsGET:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - SysConfigNameResource
    Properties:
      RestApiId: !Ref RESTApi
      ResourceId: !Ref SysConfigNameResource
      HttpMethod: GET
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref RESTAuthorizer
      MethodResponses:
        - StatusCode: "200"
      RequestParameters:
        method.request.path.name: 
          Required: true
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        RequestParameters:
          integration.request.path.name: 'method.request.path.name'
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SysConfigsRetrievalHandlerArn}/invocations 

  SysConfigsPUT:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - SysConfigResource
    Properties:
      RestApiId: !Ref RESTApi
      ResourceId: !Ref SysConfigResource
      HttpMethod: PUT
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref RESTAuthorizer
      MethodResponses:
        - StatusCode: "200"
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SysConfigsUpdateHandlerArn}/invocations 

  # Permissions
  UserWorkspaceHandlerrPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UserWorkspaceHandlerArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*

  PublicHandlerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PublicHandlerArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*

  UserUpdateByTokenHandlerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UserUpdateByTokenHandlerArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*

  SysConfigsRetrievalHandlerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SysConfigsRetrievalHandlerArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*

  SysConfigsUpdateHandlerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SysConfigsUpdateHandlerArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*

Parameters:
  EnvironmentName:
    Type: String
  StageName:
    Type: String
  ApiGatewayName:
    Type: String
  CognitoUserPoolArn:
    Type: String
  UserWorkspaceHandlerArn:
    Type: String
  PublicHandlerArn:
    Type: String
  UserCreateHandlerArn:
    Type: String
  SysConfigsRetrievalHandlerArn:
    Type: String
  SysConfigsUpdateHandlerArn:
    Type: String